---
title: "RNAseq Mini Project"
author: "Jordan Prych (A17080226)"
format: pdf
toc: TRUE
---

## Background

The data for for hands-on session comes from GEO entry: GSE37704, which is associated with the following publication:

>Trapnell C, Hendrickson DG, Sauvageau M, Goff L et al. "Differential analysis of gene regulation at transcript resolution with RNA-seq". Nat Biotechnol 2013 Jan;31(1):46-53. PMID: 23222703

The authors report on differential analysis of lung fibroblasts in response to loss of the developmental transcription factor HOXA1. Their results and others indicate that HOXA1 is required for lung fibroblast and HeLa cell cycle progression. In particular their analysis show that "loss of HOXA1 results in significant expression level changes in thousands of individual transcripts, along with isoform switching events in key regulators of the cell cycle". For our session we have used their Sailfish gene-level estimated counts and hence are restricted to protein-coding genes only.

## Data Import 

```{r}
library(DESeq2)
```

```{r}
counts <- read.csv("GSE37704_featurecounts.csv", row.names=1)
  
metadata <- read.csv("GSE37704_metadata.csv")

```

## Inspect and Tidy Data 

Does the `counts` column data match the `colData` rows? 

No, there is an extra column, legnth

```{r}
head(counts)
```



```{r}
head(metadata)
```

```{r}
metadata$id
colnames(counts)
```

>Q. Complete the code below to remove the troublesome first column from countData:

The fix here looks to be removing the first "legnth" column from counts:

```{r}
countData <- counts[,-1]
head(countData)
```

Check for matching countData and colData

```{r}
colnames(countData) == metadata$id
```
>Q. How many genes in total?

```{r}
nrow(countData)
```

>Q. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).

```{r}
countData = countData[rowSums(countData)>0,]
head(countData)
```

## Setup for DESeq 

```{r}
library(DESeq2)

dds = DESeqDataSetFromMatrix(countData=countData, colData=metadata, design =~condition)

dds=DESeq(dds)
```


## Running DEseq

```{r}
dds
```

```{r}
res=results(dds)
```

>Q3. Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.

```{r}
summary(res)
```


```{r}
res
```

## Volcano Plot of Results 

>Q. Improve this plot by completing the below code, which adds color and axis labels

```{r}
#Color Vectors 
mycols <- rep("gray", nrow(res))
mycols[res$log2FoldChange >=2] <- "darkblue"
mycols[res$log2FoldChange <= -2] <- "darkblue"
mycols[res$padj >0.05] <- "green"

library(ggplot2)

ggplot(res) + aes(log2FoldChange, -log(padj)) + geom_point(col=mycols) + geom_vline(xintercept=2, lty=2) +geom_vline(xintercept=-2, lty=2) + geom_hline(yintercept=0.05, lty=2)
```


## Gene Annotation 

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")
```

```{r}
columns(org.Hs.eg.db)
```


>Q. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.

```{r}
res$symbol <- mapIds(org.Hs.eg.db, keys=rownames(res), keytype="ENSEMBL", column="SYMBOL")
  
res$entrez <- mapIds(org.Hs.eg.db, keys=rownames(res), keytype="ENSEMBL", column="ENTREZID")
  
res$genename <- mapIds(org.Hs.eg.db, keys=rownames(res), keytype="ENSEMBL", column="GENENAME")
```

```{r}
head(res, 10)
```


>Q. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.

Reorder these results by adjusted p-value and save them to a CSV file in your current project directory
```{r}
res= res[order(res$pvalue),]
write.csv(res, file="deseq_results.csv")
```


## Pathway Analysis 

```{r}
library(pathview)
```

```{r}
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

head(kegg.sets.hs, 2)
```

We have the Entrez gene Ids and we have the fold change results from DESeq2 analysis 

```{r}
foldchanges=res$log2FoldChange
names(foldchanges)=res$entrez 
head(foldchanges)
```

Now, lets run the gage pathway 

```{r}
keggres = gage(foldchanges, gsets=kegg.sets.hs)
head(keggres$less)
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

![](hsa04110.pathview.png)


```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```

```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```
```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```


```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04060")
```

![](hsa04060.pathview.png)

![](hsa05323.pathview.png)

![](hsa05332.pathview.png)

![](hsa05146.pathview.png)

![](hsa04640.pathview.png)
>Q. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?


```{r}
keggrespathways <- rownames(keggres$less)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```





![](hsa04110.pathview.png)

![](hsa03030.pathview.png)

![](hsa05130.pathview.png)
![](hsa03013.pathview.png)

![](hsa03440.pathview.png)


## Gene Ontology Analysis

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```


>Q.What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

The cell cycle, Miotic has the most significant Entities p-value with the value 1.7E-4. Yes, the top result for the KEGG results was the cell cycle, although it has a different p-value of 8.99E-6. KEGG looks at things in the context of complex biological pathways, whereas GO provides a standardizes way to describe gene function, leading to differences in results between the two methods. 






















