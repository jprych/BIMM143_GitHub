---
title: "Class09 halloween mini-project"
author: "Jordan Prych (PID: A1780226)"
format: pdf
toc: true
---

Today we will examine data from 538 on common Halloween candy. In particular, we will use ggplot, dplyr, and PCA to make sense of this multivariable dataset. 

## Importing Candy Data

```{r}
candy_file <- "candy-data.txt"

candy = read.csv(candy_file, row.names=1)
head(candy)
```

>Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```
There are 85 different candy types in this dataset. 


>Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```
There are 38 fruity candy types. 

> How many chocolate candy are there in the dataset? 

```{r}
sum(candy$chocolate)
```
There are 37 chocolate candy types. 


## What is your Favorite Candy? 

For a given candy, `winpercent` is the percentage of people who prefer this candy over another randomly chosen candy in the dataset. 

We can find the `winpercent` value by using the candy name to access the corresponding row in the dataset. 

```{r}
candy["Twix", ]$winpercent
```

>Q3. What is your favorite candy in the dataset and what is it’s winpercent value? 

```{r}
candy["Air Heads", ]$winpercent
```


>Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat", ]$winpercent 
```


>Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

**Side Note:** the skim()` function in the **skimr** package can help give you a quick overview of a given dataset. 

Let's install in the package using `install.packages("skimr")`and load the package using `library()`: 

```{r}
library("skimr")
skim(candy)
```

>Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset? 

The `winpercent` column looks to be different than the other columns because all the values are higher than the other columns. The scale of the data is different in this column than the others(1-100% rather than 0-1), so therefore you must scale the data before you run a PCA because if not, the PCA will be dominated by this column. 


>Q7. What do you think a zero and one represent for the candy$chocolate column?

a zero indicates that the candy is not a chocolate type and a 1 indicated that the candy is a chocolate type. 

>Q8. Plot a histogram of winpercent values. 

```{r}
hist(candy$winpercent)
```

with ggplot: 
```{r}
library(ggplot2)

ggplot(candy) + aes(winpercent) + geom_histogram(bins=10, fill="lightblue")
```

>Q9. Is the distribution of winpercent values symmetrical?

No

>Q10. Is the center of the distribution above or below 50%?

From the histogram, we see the center is below 50%

```{r}
summary(candy$winpercent)
```
>Q11. On average is chocolate candy higher or lower ranked than fruit candy?

-step 1. Find all "chocolate" candy 

-step 2. Find their "winpercent" values

-step 3. summarize their values

-step 4. find all "fruity" candies

-step 5. find their "winpercent" values

-step 6. summarize these values

Chocolate
```{r}
#Step 1
choc.inds <- candy$chocolate ==1

#Step 2
choc.win <- candy[choc.inds,]$winpercent

#Step 3
choc.mean <- mean(choc.win)
```

Fruity
```{r}
#Step 4
fruity.inds <- candy$fruity==1

#Step 5
fruity.win <- candy[fruity.inds, ]$winpercent

#Step 6
fruity.mean <- mean(fruity.win)
```


Chocolate candy has a higher mean winpercent than fruity candy. 

```{r}
choc.mean
fruity.mean
```



>Q12. Is this difference statistically significant?

```{r}
t.test(choc.win, fruity.win)
```
p-value on 2.871e^-08 means that this difference is significantly significant. 

## Overall Candy Rankings 

>Q13. What are the five least liked candy types in this set?

```{r}
#Not that useful- it just sorts the values 
sort(candy$winpercent)

```
```{r}
x<- c(10, 1, 100)
sort(x)

order(x)
x[order(x)]
```

The `order()` function tells us how to arrange the elements of the input to make them sorted - i.e. how to order them. 

We can determine tha order of winpercent to make them sorted and use that order to arrange whole dataset. 

```{r}
ord.inds <- order(candy$winpercent)
head(candy[ord.inds, ])
```


>Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
tail(candy[ord.inds, ])
```

OR...
```{r}
ord.inds <- order(candy$winpercent, decreasing =T)
head(candy[ord.inds, ])
```

>Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
library(ggplot2)

ggplot(candy) + aes(winpercent, rownames(candy)) + geom_col()
```

>Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
library(ggplot2)

ggplot(candy) + aes(winpercent, reorder(rownames(candy),winpercent)) + geom_col()
```

Let's set up a color vector that signifies candy type to use for future plots: 
```{r}
my_cols=rep("black", nrow(candy))
my_cols[candy$chocolate==1] = "chocolate"
my_cols[candy$fruity==1] = "blue"
my_cols[candy$bar==1] = "lightblue"
```

Use `fill=my_cols` for `geom_col()`. 

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) 

```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(col=my_cols) 

```

using `col=my_cols` outlines the columns in the color and does not fill the inside. 

>Q17. What is the worst ranked chocolate candy?

the worst ranked chocolate candy is Sixlets

>Q18. What is the best ranked fruity candy?

The best ranked fruity candy is Starburst

## Taking a look at Pricepercent

One way we can get the value for money is to make a plave of `winpercent` vs the `pricepercent` variables. The `pricepercent` variable records the percentile rank of the candy's price against all the other candies in the dataset. Lower values are less expensive and higher values are more expensive. 

To avoid the overplotting of the text labels we can use the add on package `ggrepel`. Install the `ggrepel` package using `Install.packages()`. 


```{r}
library(ggrepel)

#Plot of price vs. win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) + geom_point(col=my_cols) + geom_text_repel(col=my_cols, size=3.3, max.overlaps=6) + theme_bw()
```

>Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reese's Miniatures 

>Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = T)
head(candy[ord, c(11, 12)], n=5)
```


Top 5 most expensive candy types Nik L Nip, Nestle Smarties, Ring pop, Hershey's Krackle, and Hershey's Milk Chocolate. The least popular among these is the Nik L Nips. 

## Exploring the Correlation Structure 

Now that we have explored the dataset a little, we will see how the variables interact with one another. 

First we will use correlation and view the results with the **corrplot** package to plot a correlation matrix. 

```{r}
library(corrplot)

cij <- cor(candy)
cij
```
```{r}
corrplot(cij)
```

>Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

fruity and chocolate are anti-correlated. pluribus and bar also have anti-correlation. 

>Q23. Similarly, what two variables are most positively correlated? 

The chocolate and winpercent are most positively correlated. 



## Principal Component Analysis

Let's apply PCA using `prcomp()` function to our candy dataset, remembering to set `scale=TRUE` argument. 

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```
```{r}
attributes(pca)
```

Now we can plot our main PCA score plot of PC1 vs. PC2

```{r}
plot(pca$x[,1], pca$x[,2])
```

With ggplot: 
```{r}
ggplot(candy) + aes(pca$x[,1], pca$x[,2], label=rownames(pca$x)) + geom_point(col=my_cols) + geom_text_repel(col=my_cols, max.overlaps=6)
```

ggplot works best when you supply an input data.frame that includes a separate column for each aestetics you would like displayed in your final plot. To acomplish this, we make a new data.frame that contain out PCA results with all the rest of our candy data. 


```{r}
# Make a new datframe 
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```

```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps=7)
```

We can pass the ggplot object `p` to **plotly** to generate an interactive plot that you can moouse over to see labels. 

use `install.packages()` to install plotly. 

**Note:** plot was made in R Studio, but since it cannot be rendered into PDF format, plotly steps are left out of report. 


Let's look at how the original variables contribute to to the PCs. Let's start with PC1: 

```{r}
PC1 <- pca$rotation[,1]
```


```{r}
ggplot(pca$rotation) + aes(PC1, reorder(rownames(pca$rotation), PC1)) + geom_col()
```
> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

fruity, pluribus(comes in a bag), and hard are picked up strongly by PC1. Yes, this does make sense because we can see in the PCA plot that the blue dots(fruity candies) are grouped in the positive direction on the x-axis(PC1). 





